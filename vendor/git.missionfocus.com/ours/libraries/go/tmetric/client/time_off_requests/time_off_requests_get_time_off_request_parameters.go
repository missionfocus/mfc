// Code generated by go-swagger; DO NOT EDIT.

package time_off_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTimeOffRequestsGetTimeOffRequestParams creates a new TimeOffRequestsGetTimeOffRequestParams object
// with the default values initialized.
func NewTimeOffRequestsGetTimeOffRequestParams() *TimeOffRequestsGetTimeOffRequestParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTimeOffRequestsGetTimeOffRequestParamsWithTimeout creates a new TimeOffRequestsGetTimeOffRequestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTimeOffRequestsGetTimeOffRequestParamsWithTimeout(timeout time.Duration) *TimeOffRequestsGetTimeOffRequestParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestParams{

		timeout: timeout,
	}
}

// NewTimeOffRequestsGetTimeOffRequestParamsWithContext creates a new TimeOffRequestsGetTimeOffRequestParams object
// with the default values initialized, and the ability to set a context for a request
func NewTimeOffRequestsGetTimeOffRequestParamsWithContext(ctx context.Context) *TimeOffRequestsGetTimeOffRequestParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestParams{

		Context: ctx,
	}
}

// NewTimeOffRequestsGetTimeOffRequestParamsWithHTTPClient creates a new TimeOffRequestsGetTimeOffRequestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTimeOffRequestsGetTimeOffRequestParamsWithHTTPClient(client *http.Client) *TimeOffRequestsGetTimeOffRequestParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestParams{
		HTTPClient: client,
	}
}

/*TimeOffRequestsGetTimeOffRequestParams contains all the parameters to send to the API endpoint
for the time off requests get time off request operation typically these are written to a http.Request
*/
type TimeOffRequestsGetTimeOffRequestParams struct {

	/*AccountID*/
	AccountID int32
	/*TimeOffRequestID*/
	TimeOffRequestID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) WithTimeout(timeout time.Duration) *TimeOffRequestsGetTimeOffRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) WithContext(ctx context.Context) *TimeOffRequestsGetTimeOffRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) WithHTTPClient(client *http.Client) *TimeOffRequestsGetTimeOffRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) WithAccountID(accountID int32) *TimeOffRequestsGetTimeOffRequestParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) SetAccountID(accountID int32) {
	o.AccountID = accountID
}

// WithTimeOffRequestID adds the timeOffRequestID to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) WithTimeOffRequestID(timeOffRequestID int32) *TimeOffRequestsGetTimeOffRequestParams {
	o.SetTimeOffRequestID(timeOffRequestID)
	return o
}

// SetTimeOffRequestID adds the timeOffRequestId to the time off requests get time off request params
func (o *TimeOffRequestsGetTimeOffRequestParams) SetTimeOffRequestID(timeOffRequestID int32) {
	o.TimeOffRequestID = timeOffRequestID
}

// WriteToRequest writes these params to a swagger request
func (o *TimeOffRequestsGetTimeOffRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", swag.FormatInt32(o.AccountID)); err != nil {
		return err
	}

	// path param timeOffRequestId
	if err := r.SetPathParam("timeOffRequestId", swag.FormatInt32(o.TimeOffRequestID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
