// Code generated by go-swagger; DO NOT EDIT.

package time_off_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new time off requests API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for time off requests API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	TimeOffRequestsDeleteTimeOffRequest(params *TimeOffRequestsDeleteTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsDeleteTimeOffRequestNoContent, error)

	TimeOffRequestsGetApprovers(params *TimeOffRequestsGetApproversParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsGetApproversOK, error)

	TimeOffRequestsGetTimeOffRequest(params *TimeOffRequestsGetTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsGetTimeOffRequestOK, error)

	TimeOffRequestsGetTimeOffRequests(params *TimeOffRequestsGetTimeOffRequestsParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsGetTimeOffRequestsOK, error)

	TimeOffRequestsPostTimeOffRequest(params *TimeOffRequestsPostTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsPostTimeOffRequestOK, error)

	TimeOffRequestsPutResolutionTimeOffRequest(params *TimeOffRequestsPutResolutionTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsPutResolutionTimeOffRequestNoContent, error)

	TimeOffRequestsPutTimeOffRequest(params *TimeOffRequestsPutTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsPutTimeOffRequestOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  TimeOffRequestsDeleteTimeOffRequest time off requests delete time off request API
*/
func (a *Client) TimeOffRequestsDeleteTimeOffRequest(params *TimeOffRequestsDeleteTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsDeleteTimeOffRequestNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimeOffRequestsDeleteTimeOffRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimeOffRequests_DeleteTimeOffRequest",
		Method:             "DELETE",
		PathPattern:        "/api/accounts/{accountId}/timeoff/requests/{timeOffRequestId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimeOffRequestsDeleteTimeOffRequestReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimeOffRequestsDeleteTimeOffRequestNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimeOffRequests_DeleteTimeOffRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimeOffRequestsGetApprovers time off requests get approvers API
*/
func (a *Client) TimeOffRequestsGetApprovers(params *TimeOffRequestsGetApproversParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsGetApproversOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimeOffRequestsGetApproversParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimeOffRequests_GetApprovers",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/timeoff/requests/approvers",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimeOffRequestsGetApproversReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimeOffRequestsGetApproversOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimeOffRequests_GetApprovers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimeOffRequestsGetTimeOffRequest time off requests get time off request API
*/
func (a *Client) TimeOffRequestsGetTimeOffRequest(params *TimeOffRequestsGetTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsGetTimeOffRequestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimeOffRequestsGetTimeOffRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimeOffRequests_GetTimeOffRequest",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/timeoff/requests/{timeOffRequestId}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimeOffRequestsGetTimeOffRequestReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimeOffRequestsGetTimeOffRequestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimeOffRequests_GetTimeOffRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimeOffRequestsGetTimeOffRequests time off requests get time off requests API
*/
func (a *Client) TimeOffRequestsGetTimeOffRequests(params *TimeOffRequestsGetTimeOffRequestsParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsGetTimeOffRequestsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimeOffRequestsGetTimeOffRequestsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimeOffRequests_GetTimeOffRequests",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/timeoff/requests",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimeOffRequestsGetTimeOffRequestsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimeOffRequestsGetTimeOffRequestsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimeOffRequests_GetTimeOffRequests: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimeOffRequestsPostTimeOffRequest time off requests post time off request API
*/
func (a *Client) TimeOffRequestsPostTimeOffRequest(params *TimeOffRequestsPostTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsPostTimeOffRequestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimeOffRequestsPostTimeOffRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimeOffRequests_PostTimeOffRequest",
		Method:             "POST",
		PathPattern:        "/api/accounts/{accountId}/timeoff/requests",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimeOffRequestsPostTimeOffRequestReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimeOffRequestsPostTimeOffRequestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimeOffRequests_PostTimeOffRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimeOffRequestsPutResolutionTimeOffRequest time off requests put resolution time off request API
*/
func (a *Client) TimeOffRequestsPutResolutionTimeOffRequest(params *TimeOffRequestsPutResolutionTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsPutResolutionTimeOffRequestNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimeOffRequestsPutResolutionTimeOffRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimeOffRequests_PutResolutionTimeOffRequest",
		Method:             "PUT",
		PathPattern:        "/api/accounts/{accountId}/timeoff/requests/{timeOffRequestId}/resolution",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimeOffRequestsPutResolutionTimeOffRequestReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimeOffRequestsPutResolutionTimeOffRequestNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimeOffRequests_PutResolutionTimeOffRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimeOffRequestsPutTimeOffRequest time off requests put time off request API
*/
func (a *Client) TimeOffRequestsPutTimeOffRequest(params *TimeOffRequestsPutTimeOffRequestParams, authInfo runtime.ClientAuthInfoWriter) (*TimeOffRequestsPutTimeOffRequestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimeOffRequestsPutTimeOffRequestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimeOffRequests_PutTimeOffRequest",
		Method:             "PUT",
		PathPattern:        "/api/accounts/{accountId}/timeoff/requests/{timeOffRequestId}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimeOffRequestsPutTimeOffRequestReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimeOffRequestsPutTimeOffRequestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimeOffRequests_PutTimeOffRequest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
