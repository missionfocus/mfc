// Code generated by go-swagger; DO NOT EDIT.

package time_off_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTimeOffRequestsGetTimeOffRequestsParams creates a new TimeOffRequestsGetTimeOffRequestsParams object
// with the default values initialized.
func NewTimeOffRequestsGetTimeOffRequestsParams() *TimeOffRequestsGetTimeOffRequestsParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTimeOffRequestsGetTimeOffRequestsParamsWithTimeout creates a new TimeOffRequestsGetTimeOffRequestsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTimeOffRequestsGetTimeOffRequestsParamsWithTimeout(timeout time.Duration) *TimeOffRequestsGetTimeOffRequestsParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestsParams{

		timeout: timeout,
	}
}

// NewTimeOffRequestsGetTimeOffRequestsParamsWithContext creates a new TimeOffRequestsGetTimeOffRequestsParams object
// with the default values initialized, and the ability to set a context for a request
func NewTimeOffRequestsGetTimeOffRequestsParamsWithContext(ctx context.Context) *TimeOffRequestsGetTimeOffRequestsParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestsParams{

		Context: ctx,
	}
}

// NewTimeOffRequestsGetTimeOffRequestsParamsWithHTTPClient creates a new TimeOffRequestsGetTimeOffRequestsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTimeOffRequestsGetTimeOffRequestsParamsWithHTTPClient(client *http.Client) *TimeOffRequestsGetTimeOffRequestsParams {
	var ()
	return &TimeOffRequestsGetTimeOffRequestsParams{
		HTTPClient: client,
	}
}

/*TimeOffRequestsGetTimeOffRequestsParams contains all the parameters to send to the API endpoint
for the time off requests get time off requests operation typically these are written to a http.Request
*/
type TimeOffRequestsGetTimeOffRequestsParams struct {

	/*AccountID*/
	AccountID int32
	/*FilterAccountID
	  Gets or sets the account identifier.

	*/
	FilterAccountID *int32
	/*FilterEndDate
	  Gets or sets report end date.

	*/
	FilterEndDate *strfmt.DateTime
	/*FilterGroupList
	  Gets or sets group list for report filter.

	*/
	FilterGroupList []int32
	/*FilterPolicyList
	  Gets or sets time-off request policy list for filter.

	*/
	FilterPolicyList []int32
	/*FilterProfileList
	  Gets or sets profile list for report filter.

	*/
	FilterProfileList []int32
	/*FilterStartDate
	  Gets or sets report start date.

	*/
	FilterStartDate *strfmt.DateTime
	/*FilterStatusList
	  Gets or sets time-off request policy list for filter.

	*/
	FilterStatusList []int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithTimeout(timeout time.Duration) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithContext(ctx context.Context) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithHTTPClient(client *http.Client) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithAccountID(accountID int32) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetAccountID(accountID int32) {
	o.AccountID = accountID
}

// WithFilterAccountID adds the filterAccountID to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithFilterAccountID(filterAccountID *int32) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetFilterAccountID(filterAccountID)
	return o
}

// SetFilterAccountID adds the filterAccountId to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetFilterAccountID(filterAccountID *int32) {
	o.FilterAccountID = filterAccountID
}

// WithFilterEndDate adds the filterEndDate to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithFilterEndDate(filterEndDate *strfmt.DateTime) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetFilterEndDate(filterEndDate)
	return o
}

// SetFilterEndDate adds the filterEndDate to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetFilterEndDate(filterEndDate *strfmt.DateTime) {
	o.FilterEndDate = filterEndDate
}

// WithFilterGroupList adds the filterGroupList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithFilterGroupList(filterGroupList []int32) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetFilterGroupList(filterGroupList)
	return o
}

// SetFilterGroupList adds the filterGroupList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetFilterGroupList(filterGroupList []int32) {
	o.FilterGroupList = filterGroupList
}

// WithFilterPolicyList adds the filterPolicyList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithFilterPolicyList(filterPolicyList []int32) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetFilterPolicyList(filterPolicyList)
	return o
}

// SetFilterPolicyList adds the filterPolicyList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetFilterPolicyList(filterPolicyList []int32) {
	o.FilterPolicyList = filterPolicyList
}

// WithFilterProfileList adds the filterProfileList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithFilterProfileList(filterProfileList []int32) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetFilterProfileList(filterProfileList)
	return o
}

// SetFilterProfileList adds the filterProfileList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetFilterProfileList(filterProfileList []int32) {
	o.FilterProfileList = filterProfileList
}

// WithFilterStartDate adds the filterStartDate to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithFilterStartDate(filterStartDate *strfmt.DateTime) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetFilterStartDate(filterStartDate)
	return o
}

// SetFilterStartDate adds the filterStartDate to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetFilterStartDate(filterStartDate *strfmt.DateTime) {
	o.FilterStartDate = filterStartDate
}

// WithFilterStatusList adds the filterStatusList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) WithFilterStatusList(filterStatusList []int32) *TimeOffRequestsGetTimeOffRequestsParams {
	o.SetFilterStatusList(filterStatusList)
	return o
}

// SetFilterStatusList adds the filterStatusList to the time off requests get time off requests params
func (o *TimeOffRequestsGetTimeOffRequestsParams) SetFilterStatusList(filterStatusList []int32) {
	o.FilterStatusList = filterStatusList
}

// WriteToRequest writes these params to a swagger request
func (o *TimeOffRequestsGetTimeOffRequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", swag.FormatInt32(o.AccountID)); err != nil {
		return err
	}

	if o.FilterAccountID != nil {

		// query param filter.accountId
		var qrFilterAccountID int32
		if o.FilterAccountID != nil {
			qrFilterAccountID = *o.FilterAccountID
		}
		qFilterAccountID := swag.FormatInt32(qrFilterAccountID)
		if qFilterAccountID != "" {
			if err := r.SetQueryParam("filter.accountId", qFilterAccountID); err != nil {
				return err
			}
		}

	}

	if o.FilterEndDate != nil {

		// query param filter.endDate
		var qrFilterEndDate strfmt.DateTime
		if o.FilterEndDate != nil {
			qrFilterEndDate = *o.FilterEndDate
		}
		qFilterEndDate := qrFilterEndDate.String()
		if qFilterEndDate != "" {
			if err := r.SetQueryParam("filter.endDate", qFilterEndDate); err != nil {
				return err
			}
		}

	}

	var valuesFilterGroupList []string
	for _, v := range o.FilterGroupList {
		valuesFilterGroupList = append(valuesFilterGroupList, swag.FormatInt32(v))
	}

	joinedFilterGroupList := swag.JoinByFormat(valuesFilterGroupList, "multi")
	// query array param filter.groupList
	if err := r.SetQueryParam("filter.groupList", joinedFilterGroupList...); err != nil {
		return err
	}

	var valuesFilterPolicyList []string
	for _, v := range o.FilterPolicyList {
		valuesFilterPolicyList = append(valuesFilterPolicyList, swag.FormatInt32(v))
	}

	joinedFilterPolicyList := swag.JoinByFormat(valuesFilterPolicyList, "multi")
	// query array param filter.policyList
	if err := r.SetQueryParam("filter.policyList", joinedFilterPolicyList...); err != nil {
		return err
	}

	var valuesFilterProfileList []string
	for _, v := range o.FilterProfileList {
		valuesFilterProfileList = append(valuesFilterProfileList, swag.FormatInt32(v))
	}

	joinedFilterProfileList := swag.JoinByFormat(valuesFilterProfileList, "multi")
	// query array param filter.profileList
	if err := r.SetQueryParam("filter.profileList", joinedFilterProfileList...); err != nil {
		return err
	}

	if o.FilterStartDate != nil {

		// query param filter.startDate
		var qrFilterStartDate strfmt.DateTime
		if o.FilterStartDate != nil {
			qrFilterStartDate = *o.FilterStartDate
		}
		qFilterStartDate := qrFilterStartDate.String()
		if qFilterStartDate != "" {
			if err := r.SetQueryParam("filter.startDate", qFilterStartDate); err != nil {
				return err
			}
		}

	}

	var valuesFilterStatusList []string
	for _, v := range o.FilterStatusList {
		valuesFilterStatusList = append(valuesFilterStatusList, swag.FormatInt32(v))
	}

	joinedFilterStatusList := swag.JoinByFormat(valuesFilterStatusList, "multi")
	// query array param filter.statusList
	if err := r.SetQueryParam("filter.statusList", joinedFilterStatusList...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
