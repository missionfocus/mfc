// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SubscriptionPlan Subscription plan represents a set of pricing options for TMetric customers.
//
// swagger:model SubscriptionPlan
type SubscriptionPlan struct {

	// Gets or sets the subscription plan's description.
	Description string `json:"description,omitempty"`

	// Gets or sets the external plan identifier which is an pricing option unique code in Avagate's system.
	ExternalPlanID string `json:"externalPlanId,omitempty"`

	// Gets or sets a value indicating whether this plan is deprecated (cannot be used for new subscriptions).
	IsDeprecated bool `json:"isDeprecated,omitempty"`

	// Gets a value indicating whether this plan is free one.
	// Read Only: true
	IsFree *bool `json:"isFree,omitempty"`

	// Gets or sets max users with role Client for plan
	MaxClients int32 `json:"maxClients,omitempty"`

	// Gets or sets the subscription plan's name.
	Name string `json:"name,omitempty"`

	// Gets or sets the price (in USD ) per user per month for annual billing.
	PriceAnnualUsd float64 `json:"priceAnnualUsd,omitempty"`

	// Gets or sets the price (in USD ) per user per month for monthly billing.
	PriceMonthlyUsd float64 `json:"priceMonthlyUsd,omitempty"`

	// Gets or sets the subscription plan identifier.
	SubscriptionPlanID int32 `json:"subscriptionPlanId,omitempty"`
}

// Validate validates this subscription plan
func (m *SubscriptionPlan) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SubscriptionPlan) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SubscriptionPlan) UnmarshalBinary(b []byte) error {
	var res SubscriptionPlan
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
