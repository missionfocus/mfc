// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TimeOffRequestFilter TimeOff request filter parameters.
//
// swagger:model TimeOffRequestFilter
type TimeOffRequestFilter struct {

	// Gets or sets the account identifier.
	AccountID int32 `json:"accountId,omitempty"`

	// Gets or sets report end date.
	// Format: date-time
	EndDate strfmt.DateTime `json:"endDate,omitempty"`

	// Gets or sets group list for report filter.
	GroupList []int32 `json:"groupList"`

	// Gets or sets time-off request policy list for filter.
	PolicyList []int32 `json:"policyList"`

	// Gets or sets profile list for report filter.
	ProfileList []int32 `json:"profileList"`

	// Gets or sets report start date.
	// Format: date-time
	StartDate strfmt.DateTime `json:"startDate,omitempty"`

	// Gets or sets time-off request policy list for filter.
	StatusList []int32 `json:"statusList"`
}

// Validate validates this time off request filter
func (m *TimeOffRequestFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatusList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TimeOffRequestFilter) validateEndDate(formats strfmt.Registry) error {

	if swag.IsZero(m.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", m.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TimeOffRequestFilter) validateStartDate(formats strfmt.Registry) error {

	if swag.IsZero(m.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", m.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var timeOffRequestFilterStatusListItemsEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,3]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		timeOffRequestFilterStatusListItemsEnum = append(timeOffRequestFilterStatusListItemsEnum, v)
	}
}

func (m *TimeOffRequestFilter) validateStatusListItemsEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, timeOffRequestFilterStatusListItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *TimeOffRequestFilter) validateStatusList(formats strfmt.Registry) error {

	if swag.IsZero(m.StatusList) { // not required
		return nil
	}

	for i := 0; i < len(m.StatusList); i++ {

		// value enum
		if err := m.validateStatusListItemsEnum("statusList"+"."+strconv.Itoa(i), "body", m.StatusList[i]); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TimeOffRequestFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimeOffRequestFilter) UnmarshalBinary(b []byte) error {
	var res TimeOffRequestFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
