// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReportParameters All report filter parameters.
//
// swagger:model ReportParameters
type ReportParameters struct {

	// Gets or sets the account identifier.
	AccountID int32 `json:"accountId,omitempty"`

	// Gets or sets the value indicating that only active projects should be returned.
	ActiveProjectsOnly bool `json:"activeProjectsOnly,omitempty"`

	// Gets or sets the value indicating which tasks should be returned: false - non-billable, true - billable, null - both.
	Billable bool `json:"billable,omitempty"`

	// Gets or sets the column that will be shown on chart.
	ChartValue string `json:"chartValue,omitempty"`

	// Gets or sets cluent list for report filter.
	ClientList []int32 `json:"clientList"`

	// Gets or sets report end date.
	// Format: date-time
	EndDate strfmt.DateTime `json:"endDate,omitempty"`

	// Gets or sets the group column names.
	GroupColumnNames []string `json:"groupColumnNames"`

	// Gets or sets group list for report filter.
	GroupList []int32 `json:"groupList"`

	// Gets or sets the hidden column names.
	HiddenColumns []string `json:"hiddenColumns"`

	// Gets or sets the value indicating which tasks should be returned: false - ununvoiced, true - invoiced, null - both.
	Invoiced bool `json:"invoiced,omitempty"`

	// Gets or sets the value indicating that rounding in report should be turned off.
	NoRounding bool `json:"noRounding,omitempty"`

	// Gets or sets profile list for report filter.
	ProfileList []int32 `json:"profileList"`

	// Gets or sets project list for report filter.
	ProjectList []int32 `json:"projectList"`

	// Gets or sets report start date.
	// Format: date-time
	StartDate strfmt.DateTime `json:"startDate,omitempty"`

	// Gets or sets tag list for report filter.
	TagList []int32 `json:"tagList"`

	// Gets or sets the string that will be found in time entry descriptions.
	TimeEntryFilter string `json:"timeEntryFilter,omitempty"`

	// Gets or sets the value indicating that UTC time should be returned.
	UseUtcTime bool `json:"useUtcTime,omitempty"`
}

// Validate validates this report parameters
func (m *ReportParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReportParameters) validateEndDate(formats strfmt.Registry) error {

	if swag.IsZero(m.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", m.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ReportParameters) validateStartDate(formats strfmt.Registry) error {

	if swag.IsZero(m.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", m.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReportParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportParameters) UnmarshalBinary(b []byte) error {
	var res ReportParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
