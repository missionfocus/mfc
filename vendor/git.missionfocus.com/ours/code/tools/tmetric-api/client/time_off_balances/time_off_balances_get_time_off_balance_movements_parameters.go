// Code generated by go-swagger; DO NOT EDIT.

package time_off_balances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTimeOffBalancesGetTimeOffBalanceMovementsParams creates a new TimeOffBalancesGetTimeOffBalanceMovementsParams object
// with the default values initialized.
func NewTimeOffBalancesGetTimeOffBalanceMovementsParams() *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	var ()
	return &TimeOffBalancesGetTimeOffBalanceMovementsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTimeOffBalancesGetTimeOffBalanceMovementsParamsWithTimeout creates a new TimeOffBalancesGetTimeOffBalanceMovementsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTimeOffBalancesGetTimeOffBalanceMovementsParamsWithTimeout(timeout time.Duration) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	var ()
	return &TimeOffBalancesGetTimeOffBalanceMovementsParams{

		timeout: timeout,
	}
}

// NewTimeOffBalancesGetTimeOffBalanceMovementsParamsWithContext creates a new TimeOffBalancesGetTimeOffBalanceMovementsParams object
// with the default values initialized, and the ability to set a context for a request
func NewTimeOffBalancesGetTimeOffBalanceMovementsParamsWithContext(ctx context.Context) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	var ()
	return &TimeOffBalancesGetTimeOffBalanceMovementsParams{

		Context: ctx,
	}
}

// NewTimeOffBalancesGetTimeOffBalanceMovementsParamsWithHTTPClient creates a new TimeOffBalancesGetTimeOffBalanceMovementsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTimeOffBalancesGetTimeOffBalanceMovementsParamsWithHTTPClient(client *http.Client) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	var ()
	return &TimeOffBalancesGetTimeOffBalanceMovementsParams{
		HTTPClient: client,
	}
}

/*TimeOffBalancesGetTimeOffBalanceMovementsParams contains all the parameters to send to the API endpoint
for the time off balances get time off balance movements operation typically these are written to a http.Request
*/
type TimeOffBalancesGetTimeOffBalanceMovementsParams struct {

	/*AccountID*/
	AccountID int32
	/*EndDate*/
	EndDate strfmt.DateTime
	/*TimeOffPolicyID*/
	TimeOffPolicyID int32
	/*UserProfileID*/
	UserProfileID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WithTimeout(timeout time.Duration) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WithContext(ctx context.Context) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WithHTTPClient(client *http.Client) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WithAccountID(accountID int32) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) SetAccountID(accountID int32) {
	o.AccountID = accountID
}

// WithEndDate adds the endDate to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WithEndDate(endDate strfmt.DateTime) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) SetEndDate(endDate strfmt.DateTime) {
	o.EndDate = endDate
}

// WithTimeOffPolicyID adds the timeOffPolicyID to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WithTimeOffPolicyID(timeOffPolicyID int32) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	o.SetTimeOffPolicyID(timeOffPolicyID)
	return o
}

// SetTimeOffPolicyID adds the timeOffPolicyId to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) SetTimeOffPolicyID(timeOffPolicyID int32) {
	o.TimeOffPolicyID = timeOffPolicyID
}

// WithUserProfileID adds the userProfileID to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WithUserProfileID(userProfileID int32) *TimeOffBalancesGetTimeOffBalanceMovementsParams {
	o.SetUserProfileID(userProfileID)
	return o
}

// SetUserProfileID adds the userProfileId to the time off balances get time off balance movements params
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) SetUserProfileID(userProfileID int32) {
	o.UserProfileID = userProfileID
}

// WriteToRequest writes these params to a swagger request
func (o *TimeOffBalancesGetTimeOffBalanceMovementsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", swag.FormatInt32(o.AccountID)); err != nil {
		return err
	}

	// query param endDate
	qrEndDate := o.EndDate
	qEndDate := qrEndDate.String()
	if qEndDate != "" {
		if err := r.SetQueryParam("endDate", qEndDate); err != nil {
			return err
		}
	}

	// query param timeOffPolicyId
	qrTimeOffPolicyID := o.TimeOffPolicyID
	qTimeOffPolicyID := swag.FormatInt32(qrTimeOffPolicyID)
	if qTimeOffPolicyID != "" {
		if err := r.SetQueryParam("timeOffPolicyId", qTimeOffPolicyID); err != nil {
			return err
		}
	}

	// query param userProfileId
	qrUserProfileID := o.UserProfileID
	qUserProfileID := swag.FormatInt32(qrUserProfileID)
	if qUserProfileID != "" {
		if err := r.SetQueryParam("userProfileId", qUserProfileID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
