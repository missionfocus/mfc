// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIntegrationsDeleteIntegrationParams creates a new IntegrationsDeleteIntegrationParams object
// with the default values initialized.
func NewIntegrationsDeleteIntegrationParams() *IntegrationsDeleteIntegrationParams {
	var ()
	return &IntegrationsDeleteIntegrationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewIntegrationsDeleteIntegrationParamsWithTimeout creates a new IntegrationsDeleteIntegrationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewIntegrationsDeleteIntegrationParamsWithTimeout(timeout time.Duration) *IntegrationsDeleteIntegrationParams {
	var ()
	return &IntegrationsDeleteIntegrationParams{

		timeout: timeout,
	}
}

// NewIntegrationsDeleteIntegrationParamsWithContext creates a new IntegrationsDeleteIntegrationParams object
// with the default values initialized, and the ability to set a context for a request
func NewIntegrationsDeleteIntegrationParamsWithContext(ctx context.Context) *IntegrationsDeleteIntegrationParams {
	var ()
	return &IntegrationsDeleteIntegrationParams{

		Context: ctx,
	}
}

// NewIntegrationsDeleteIntegrationParamsWithHTTPClient creates a new IntegrationsDeleteIntegrationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewIntegrationsDeleteIntegrationParamsWithHTTPClient(client *http.Client) *IntegrationsDeleteIntegrationParams {
	var ()
	return &IntegrationsDeleteIntegrationParams{
		HTTPClient: client,
	}
}

/*IntegrationsDeleteIntegrationParams contains all the parameters to send to the API endpoint
for the integrations delete integration operation typically these are written to a http.Request
*/
type IntegrationsDeleteIntegrationParams struct {

	/*AccountID*/
	AccountID int32
	/*IntegrationID*/
	IntegrationID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) WithTimeout(timeout time.Duration) *IntegrationsDeleteIntegrationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) WithContext(ctx context.Context) *IntegrationsDeleteIntegrationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) WithHTTPClient(client *http.Client) *IntegrationsDeleteIntegrationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) WithAccountID(accountID int32) *IntegrationsDeleteIntegrationParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) SetAccountID(accountID int32) {
	o.AccountID = accountID
}

// WithIntegrationID adds the integrationID to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) WithIntegrationID(integrationID int32) *IntegrationsDeleteIntegrationParams {
	o.SetIntegrationID(integrationID)
	return o
}

// SetIntegrationID adds the integrationId to the integrations delete integration params
func (o *IntegrationsDeleteIntegrationParams) SetIntegrationID(integrationID int32) {
	o.IntegrationID = integrationID
}

// WriteToRequest writes these params to a swagger request
func (o *IntegrationsDeleteIntegrationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", swag.FormatInt32(o.AccountID)); err != nil {
		return err
	}

	// path param integrationId
	if err := r.SetPathParam("integrationId", swag.FormatInt32(o.IntegrationID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
