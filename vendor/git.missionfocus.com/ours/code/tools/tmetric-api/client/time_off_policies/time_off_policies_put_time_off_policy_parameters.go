// Code generated by go-swagger; DO NOT EDIT.

package time_off_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"git.missionfocus.com/ours/code/tools/tmetric-api/models"
)

// NewTimeOffPoliciesPutTimeOffPolicyParams creates a new TimeOffPoliciesPutTimeOffPolicyParams object
// with the default values initialized.
func NewTimeOffPoliciesPutTimeOffPolicyParams() *TimeOffPoliciesPutTimeOffPolicyParams {
	var ()
	return &TimeOffPoliciesPutTimeOffPolicyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTimeOffPoliciesPutTimeOffPolicyParamsWithTimeout creates a new TimeOffPoliciesPutTimeOffPolicyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTimeOffPoliciesPutTimeOffPolicyParamsWithTimeout(timeout time.Duration) *TimeOffPoliciesPutTimeOffPolicyParams {
	var ()
	return &TimeOffPoliciesPutTimeOffPolicyParams{

		timeout: timeout,
	}
}

// NewTimeOffPoliciesPutTimeOffPolicyParamsWithContext creates a new TimeOffPoliciesPutTimeOffPolicyParams object
// with the default values initialized, and the ability to set a context for a request
func NewTimeOffPoliciesPutTimeOffPolicyParamsWithContext(ctx context.Context) *TimeOffPoliciesPutTimeOffPolicyParams {
	var ()
	return &TimeOffPoliciesPutTimeOffPolicyParams{

		Context: ctx,
	}
}

// NewTimeOffPoliciesPutTimeOffPolicyParamsWithHTTPClient creates a new TimeOffPoliciesPutTimeOffPolicyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTimeOffPoliciesPutTimeOffPolicyParamsWithHTTPClient(client *http.Client) *TimeOffPoliciesPutTimeOffPolicyParams {
	var ()
	return &TimeOffPoliciesPutTimeOffPolicyParams{
		HTTPClient: client,
	}
}

/*TimeOffPoliciesPutTimeOffPolicyParams contains all the parameters to send to the API endpoint
for the time off policies put time off policy operation typically these are written to a http.Request
*/
type TimeOffPoliciesPutTimeOffPolicyParams struct {

	/*AccountID*/
	AccountID string
	/*ClientTimeOffPolicy*/
	ClientTimeOffPolicy *models.TimeOffPolicy
	/*TimeOffPolicyID*/
	TimeOffPolicyID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) WithTimeout(timeout time.Duration) *TimeOffPoliciesPutTimeOffPolicyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) WithContext(ctx context.Context) *TimeOffPoliciesPutTimeOffPolicyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) WithHTTPClient(client *http.Client) *TimeOffPoliciesPutTimeOffPolicyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) WithAccountID(accountID string) *TimeOffPoliciesPutTimeOffPolicyParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithClientTimeOffPolicy adds the clientTimeOffPolicy to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) WithClientTimeOffPolicy(clientTimeOffPolicy *models.TimeOffPolicy) *TimeOffPoliciesPutTimeOffPolicyParams {
	o.SetClientTimeOffPolicy(clientTimeOffPolicy)
	return o
}

// SetClientTimeOffPolicy adds the clientTimeOffPolicy to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) SetClientTimeOffPolicy(clientTimeOffPolicy *models.TimeOffPolicy) {
	o.ClientTimeOffPolicy = clientTimeOffPolicy
}

// WithTimeOffPolicyID adds the timeOffPolicyID to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) WithTimeOffPolicyID(timeOffPolicyID int32) *TimeOffPoliciesPutTimeOffPolicyParams {
	o.SetTimeOffPolicyID(timeOffPolicyID)
	return o
}

// SetTimeOffPolicyID adds the timeOffPolicyId to the time off policies put time off policy params
func (o *TimeOffPoliciesPutTimeOffPolicyParams) SetTimeOffPolicyID(timeOffPolicyID int32) {
	o.TimeOffPolicyID = timeOffPolicyID
}

// WriteToRequest writes these params to a swagger request
func (o *TimeOffPoliciesPutTimeOffPolicyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", o.AccountID); err != nil {
		return err
	}

	if o.ClientTimeOffPolicy != nil {
		if err := r.SetBodyParam(o.ClientTimeOffPolicy); err != nil {
			return err
		}
	}

	// path param timeOffPolicyId
	if err := r.SetPathParam("timeOffPolicyId", swag.FormatInt32(o.TimeOffPolicyID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
