// Code generated by go-swagger; DO NOT EDIT.

package report_detailed

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new report detailed API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for report detailed API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	ReportDetailedGetDetailedCSV(params *ReportDetailedGetDetailedCSVParams, authInfo runtime.ClientAuthInfoWriter) (*ReportDetailedGetDetailedCSVOK, error)

	ReportDetailedGetDetailedPDF(params *ReportDetailedGetDetailedPDFParams, authInfo runtime.ClientAuthInfoWriter) (*ReportDetailedGetDetailedPDFOK, error)

	ReportDetailedGetDetailedReport(params *ReportDetailedGetDetailedReportParams, authInfo runtime.ClientAuthInfoWriter) (*ReportDetailedGetDetailedReportOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  ReportDetailedGetDetailedCSV gets the detailed report as c s v
*/
func (a *Client) ReportDetailedGetDetailedCSV(params *ReportDetailedGetDetailedCSVParams, authInfo runtime.ClientAuthInfoWriter) (*ReportDetailedGetDetailedCSVOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReportDetailedGetDetailedCSVParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ReportDetailed_GetDetailedCSV",
		Method:             "GET",
		PathPattern:        "/api/reports/detailed/csv",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReportDetailedGetDetailedCSVReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReportDetailedGetDetailedCSVOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReportDetailed_GetDetailedCSV: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReportDetailedGetDetailedPDF gets the detailed report as p d f
*/
func (a *Client) ReportDetailedGetDetailedPDF(params *ReportDetailedGetDetailedPDFParams, authInfo runtime.ClientAuthInfoWriter) (*ReportDetailedGetDetailedPDFOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReportDetailedGetDetailedPDFParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ReportDetailed_GetDetailedPDF",
		Method:             "GET",
		PathPattern:        "/api/reports/detailed/pdf",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReportDetailedGetDetailedPDFReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReportDetailedGetDetailedPDFOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReportDetailed_GetDetailedPDF: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReportDetailedGetDetailedReport gets the detailed report
*/
func (a *Client) ReportDetailedGetDetailedReport(params *ReportDetailedGetDetailedReportParams, authInfo runtime.ClientAuthInfoWriter) (*ReportDetailedGetDetailedReportOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReportDetailedGetDetailedReportParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ReportDetailed_GetDetailedReport",
		Method:             "GET",
		PathPattern:        "/api/reports/detailed",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReportDetailedGetDetailedReportReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReportDetailedGetDetailedReportOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReportDetailed_GetDetailedReport: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
