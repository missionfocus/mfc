// Code generated by go-swagger; DO NOT EDIT.

package time_off_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"git.missionfocus.com/ours/code/tools/tmetric-api/models"
)

// NewTimeOffRequestsPutTimeOffRequestParams creates a new TimeOffRequestsPutTimeOffRequestParams object
// with the default values initialized.
func NewTimeOffRequestsPutTimeOffRequestParams() *TimeOffRequestsPutTimeOffRequestParams {
	var ()
	return &TimeOffRequestsPutTimeOffRequestParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTimeOffRequestsPutTimeOffRequestParamsWithTimeout creates a new TimeOffRequestsPutTimeOffRequestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTimeOffRequestsPutTimeOffRequestParamsWithTimeout(timeout time.Duration) *TimeOffRequestsPutTimeOffRequestParams {
	var ()
	return &TimeOffRequestsPutTimeOffRequestParams{

		timeout: timeout,
	}
}

// NewTimeOffRequestsPutTimeOffRequestParamsWithContext creates a new TimeOffRequestsPutTimeOffRequestParams object
// with the default values initialized, and the ability to set a context for a request
func NewTimeOffRequestsPutTimeOffRequestParamsWithContext(ctx context.Context) *TimeOffRequestsPutTimeOffRequestParams {
	var ()
	return &TimeOffRequestsPutTimeOffRequestParams{

		Context: ctx,
	}
}

// NewTimeOffRequestsPutTimeOffRequestParamsWithHTTPClient creates a new TimeOffRequestsPutTimeOffRequestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTimeOffRequestsPutTimeOffRequestParamsWithHTTPClient(client *http.Client) *TimeOffRequestsPutTimeOffRequestParams {
	var ()
	return &TimeOffRequestsPutTimeOffRequestParams{
		HTTPClient: client,
	}
}

/*TimeOffRequestsPutTimeOffRequestParams contains all the parameters to send to the API endpoint
for the time off requests put time off request operation typically these are written to a http.Request
*/
type TimeOffRequestsPutTimeOffRequestParams struct {

	/*AccountID*/
	AccountID int32
	/*Request*/
	Request *models.TimeOffRequest
	/*TimeOffRequestID*/
	TimeOffRequestID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) WithTimeout(timeout time.Duration) *TimeOffRequestsPutTimeOffRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) WithContext(ctx context.Context) *TimeOffRequestsPutTimeOffRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) WithHTTPClient(client *http.Client) *TimeOffRequestsPutTimeOffRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) WithAccountID(accountID int32) *TimeOffRequestsPutTimeOffRequestParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) SetAccountID(accountID int32) {
	o.AccountID = accountID
}

// WithRequest adds the request to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) WithRequest(request *models.TimeOffRequest) *TimeOffRequestsPutTimeOffRequestParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) SetRequest(request *models.TimeOffRequest) {
	o.Request = request
}

// WithTimeOffRequestID adds the timeOffRequestID to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) WithTimeOffRequestID(timeOffRequestID string) *TimeOffRequestsPutTimeOffRequestParams {
	o.SetTimeOffRequestID(timeOffRequestID)
	return o
}

// SetTimeOffRequestID adds the timeOffRequestId to the time off requests put time off request params
func (o *TimeOffRequestsPutTimeOffRequestParams) SetTimeOffRequestID(timeOffRequestID string) {
	o.TimeOffRequestID = timeOffRequestID
}

// WriteToRequest writes these params to a swagger request
func (o *TimeOffRequestsPutTimeOffRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", swag.FormatInt32(o.AccountID)); err != nil {
		return err
	}

	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	// path param timeOffRequestId
	if err := r.SetPathParam("timeOffRequestId", o.TimeOffRequestID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
