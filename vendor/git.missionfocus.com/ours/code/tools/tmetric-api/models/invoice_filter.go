// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InvoiceFilter Invoice filter parameters.
//
// swagger:model InvoiceFilter
type InvoiceFilter struct {

	// Gets or sets cluent list for report filter.
	ClientList []int32 `json:"clientList"`

	// Gets or sets report end date.
	// Format: date-time
	EndDate strfmt.DateTime `json:"endDate,omitempty"`

	// Gets or sets report start date.
	// Format: date-time
	StartDate strfmt.DateTime `json:"startDate,omitempty"`

	// Invoice status filter
	// Enum: [0 1 2 3 4 5]
	Status int32 `json:"status,omitempty"`
}

// Validate validates this invoice filter
func (m *InvoiceFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InvoiceFilter) validateEndDate(formats strfmt.Registry) error {

	if swag.IsZero(m.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", m.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *InvoiceFilter) validateStartDate(formats strfmt.Registry) error {

	if swag.IsZero(m.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", m.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var invoiceFilterTypeStatusPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,3,4,5]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoiceFilterTypeStatusPropEnum = append(invoiceFilterTypeStatusPropEnum, v)
	}
}

// prop value enum
func (m *InvoiceFilter) validateStatusEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, invoiceFilterTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoiceFilter) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InvoiceFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InvoiceFilter) UnmarshalBinary(b []byte) error {
	var res InvoiceFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
