// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new invoices API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for invoices API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	InvoicesDeleteInvoice(params *InvoicesDeleteInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesDeleteInvoiceNoContent, error)

	InvoicesGetInvoice(params *InvoicesGetInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetInvoiceOK, error)

	InvoicesGetInvoiceXlsx(params *InvoicesGetInvoiceXlsxParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetInvoiceXlsxOK, error)

	InvoicesGetInvoices(params *InvoicesGetInvoicesParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetInvoicesOK, error)

	InvoicesGetProjects(params *InvoicesGetProjectsParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetProjectsOK, error)

	InvoicesPostInvoice(params *InvoicesPostInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesPostInvoiceOK, error)

	InvoicesPutInvoice(params *InvoicesPutInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesPutInvoiceNoContent, error)

	InvoicesPutInvoicedFlag(params *InvoicesPutInvoicedFlagParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesPutInvoicedFlagNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  InvoicesDeleteInvoice deletes invoice
*/
func (a *Client) InvoicesDeleteInvoice(params *InvoicesDeleteInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesDeleteInvoiceNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesDeleteInvoiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_DeleteInvoice",
		Method:             "DELETE",
		PathPattern:        "/api/accounts/{accountId}/invoices/{invoiceId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesDeleteInvoiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesDeleteInvoiceNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_DeleteInvoice: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoicesGetInvoice gets specific invoice
*/
func (a *Client) InvoicesGetInvoice(params *InvoicesGetInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetInvoiceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesGetInvoiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_GetInvoice",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/invoices/{invoiceId}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesGetInvoiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesGetInvoiceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_GetInvoice: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoicesGetInvoiceXlsx exports invoice to xlsx
*/
func (a *Client) InvoicesGetInvoiceXlsx(params *InvoicesGetInvoiceXlsxParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetInvoiceXlsxOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesGetInvoiceXlsxParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_GetInvoiceXlsx",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/invoices/{invoiceId}/xlsx",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesGetInvoiceXlsxReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesGetInvoiceXlsxOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_GetInvoiceXlsx: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoicesGetInvoices gets invoices list
*/
func (a *Client) InvoicesGetInvoices(params *InvoicesGetInvoicesParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetInvoicesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesGetInvoicesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_GetInvoices",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/invoices",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesGetInvoicesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesGetInvoicesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_GetInvoices: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoicesGetProjects gets projects for new invoice by client and time range
*/
func (a *Client) InvoicesGetProjects(params *InvoicesGetProjectsParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesGetProjectsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesGetProjectsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_GetProjects",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/invoices/projects",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesGetProjectsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesGetProjectsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_GetProjects: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoicesPostInvoice creates new invoice with specific date range
*/
func (a *Client) InvoicesPostInvoice(params *InvoicesPostInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesPostInvoiceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesPostInvoiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_PostInvoice",
		Method:             "POST",
		PathPattern:        "/api/accounts/{accountId}/invoices",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesPostInvoiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesPostInvoiceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_PostInvoice: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoicesPutInvoice edits invoice
*/
func (a *Client) InvoicesPutInvoice(params *InvoicesPutInvoiceParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesPutInvoiceNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesPutInvoiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_PutInvoice",
		Method:             "PUT",
		PathPattern:        "/api/accounts/{accountId}/invoices/{invoiceId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesPutInvoiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesPutInvoiceNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_PutInvoice: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoicesPutInvoicedFlag marks as invoiced uninvoiced
*/
func (a *Client) InvoicesPutInvoicedFlag(params *InvoicesPutInvoicedFlagParams, authInfo runtime.ClientAuthInfoWriter) (*InvoicesPutInvoicedFlagNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoicesPutInvoicedFlagParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Invoices_PutInvoicedFlag",
		Method:             "PUT",
		PathPattern:        "/api/accounts/{accountId}/invoices/mark",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoicesPutInvoicedFlagReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoicesPutInvoicedFlagNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Invoices_PutInvoicedFlag: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
