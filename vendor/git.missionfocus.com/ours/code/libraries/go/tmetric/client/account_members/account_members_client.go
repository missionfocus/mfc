// Code generated by go-swagger; DO NOT EDIT.

package account_members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new account members API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for account members API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	AccountMembersDeleteAccountMember(params *AccountMembersDeleteAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersDeleteAccountMemberNoContent, error)

	AccountMembersGetAccountMember(params *AccountMembersGetAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersGetAccountMemberOK, error)

	AccountMembersGetAccountMembers(params *AccountMembersGetAccountMembersParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersGetAccountMembersOK, error)

	AccountMembersPostAccountMember(params *AccountMembersPostAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersPostAccountMemberNoContent, error)

	AccountMembersPostAccountMembers(params *AccountMembersPostAccountMembersParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersPostAccountMembersOK, error)

	AccountMembersPutAccountMember(params *AccountMembersPutAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersPutAccountMemberNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  AccountMembersDeleteAccountMember deletes account member
*/
func (a *Client) AccountMembersDeleteAccountMember(params *AccountMembersDeleteAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersDeleteAccountMemberNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountMembersDeleteAccountMemberParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "AccountMembers_DeleteAccountMember",
		Method:             "DELETE",
		PathPattern:        "/api/accounts/{accountId}/members/{accountMemberId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountMembersDeleteAccountMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountMembersDeleteAccountMemberNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AccountMembers_DeleteAccountMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountMembersGetAccountMember gets specific account member
*/
func (a *Client) AccountMembersGetAccountMember(params *AccountMembersGetAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersGetAccountMemberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountMembersGetAccountMemberParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "AccountMembers_GetAccountMember",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/members/{accountMemberId}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountMembersGetAccountMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountMembersGetAccountMemberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AccountMembers_GetAccountMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountMembersGetAccountMembers gets the members of the specified account
*/
func (a *Client) AccountMembersGetAccountMembers(params *AccountMembersGetAccountMembersParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersGetAccountMembersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountMembersGetAccountMembersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "AccountMembers_GetAccountMembers",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/members",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountMembersGetAccountMembersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountMembersGetAccountMembersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AccountMembers_GetAccountMembers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountMembersPostAccountMember adds one member to account
*/
func (a *Client) AccountMembersPostAccountMember(params *AccountMembersPostAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersPostAccountMemberNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountMembersPostAccountMemberParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "AccountMembers_PostAccountMember",
		Method:             "POST",
		PathPattern:        "/api/accounts/{accountId}/members",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountMembersPostAccountMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountMembersPostAccountMemberNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AccountMembers_PostAccountMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountMembersPostAccountMembers invites new members to account
*/
func (a *Client) AccountMembersPostAccountMembers(params *AccountMembersPostAccountMembersParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersPostAccountMembersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountMembersPostAccountMembersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "AccountMembers_PostAccountMembers",
		Method:             "POST",
		PathPattern:        "/api/accounts/{accountId}/members/bulk",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountMembersPostAccountMembersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountMembersPostAccountMembersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AccountMembers_PostAccountMembers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountMembersPutAccountMember puts the account member user with member rights can only lock himself
*/
func (a *Client) AccountMembersPutAccountMember(params *AccountMembersPutAccountMemberParams, authInfo runtime.ClientAuthInfoWriter) (*AccountMembersPutAccountMemberNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountMembersPutAccountMemberParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "AccountMembers_PutAccountMember",
		Method:             "PUT",
		PathPattern:        "/api/accounts/{accountId}/members/{accountMemberId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountMembersPutAccountMemberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountMembersPutAccountMemberNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AccountMembers_PutAccountMember: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
