// Code generated by go-swagger; DO NOT EDIT.

package user_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UserProfilePutUserProfileReader is a Reader for the UserProfilePutUserProfile structure.
type UserProfilePutUserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserProfilePutUserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewUserProfilePutUserProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserProfilePutUserProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserProfilePutUserProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserProfilePutUserProfileBadRequest creates a UserProfilePutUserProfileBadRequest with default headers values
func NewUserProfilePutUserProfileBadRequest() *UserProfilePutUserProfileBadRequest {
	return &UserProfilePutUserProfileBadRequest{}
}

/*UserProfilePutUserProfileBadRequest handles this case with default header values.

When userProfile is null
*/
type UserProfilePutUserProfileBadRequest struct {
}

func (o *UserProfilePutUserProfileBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/userprofile][%d] userProfilePutUserProfileBadRequest ", 400)
}

func (o *UserProfilePutUserProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserProfilePutUserProfileForbidden creates a UserProfilePutUserProfileForbidden with default headers values
func NewUserProfilePutUserProfileForbidden() *UserProfilePutUserProfileForbidden {
	return &UserProfilePutUserProfileForbidden{}
}

/*UserProfilePutUserProfileForbidden handles this case with default header values.

When active account different from edited userProfile
*/
type UserProfilePutUserProfileForbidden struct {
}

func (o *UserProfilePutUserProfileForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/userprofile][%d] userProfilePutUserProfileForbidden ", 403)
}

func (o *UserProfilePutUserProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserProfilePutUserProfileNotFound creates a UserProfilePutUserProfileNotFound with default headers values
func NewUserProfilePutUserProfileNotFound() *UserProfilePutUserProfileNotFound {
	return &UserProfilePutUserProfileNotFound{}
}

/*UserProfilePutUserProfileNotFound handles this case with default header values.

When userProfile not found in db
*/
type UserProfilePutUserProfileNotFound struct {
}

func (o *UserProfilePutUserProfileNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/userprofile][%d] userProfilePutUserProfileNotFound ", 404)
}

func (o *UserProfilePutUserProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
