// Code generated by go-swagger; DO NOT EDIT.

package account_members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"git.missionfocus.com/ours/code/libraries/go/tmetric/models"
)

// NewAccountMembersPostAccountMembersParams creates a new AccountMembersPostAccountMembersParams object
// with the default values initialized.
func NewAccountMembersPostAccountMembersParams() *AccountMembersPostAccountMembersParams {
	var ()
	return &AccountMembersPostAccountMembersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAccountMembersPostAccountMembersParamsWithTimeout creates a new AccountMembersPostAccountMembersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAccountMembersPostAccountMembersParamsWithTimeout(timeout time.Duration) *AccountMembersPostAccountMembersParams {
	var ()
	return &AccountMembersPostAccountMembersParams{

		timeout: timeout,
	}
}

// NewAccountMembersPostAccountMembersParamsWithContext creates a new AccountMembersPostAccountMembersParams object
// with the default values initialized, and the ability to set a context for a request
func NewAccountMembersPostAccountMembersParamsWithContext(ctx context.Context) *AccountMembersPostAccountMembersParams {
	var ()
	return &AccountMembersPostAccountMembersParams{

		Context: ctx,
	}
}

// NewAccountMembersPostAccountMembersParamsWithHTTPClient creates a new AccountMembersPostAccountMembersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAccountMembersPostAccountMembersParamsWithHTTPClient(client *http.Client) *AccountMembersPostAccountMembersParams {
	var ()
	return &AccountMembersPostAccountMembersParams{
		HTTPClient: client,
	}
}

/*AccountMembersPostAccountMembersParams contains all the parameters to send to the API endpoint
for the account members post account members operation typically these are written to a http.Request
*/
type AccountMembersPostAccountMembersParams struct {

	/*AccountID*/
	AccountID int32
	/*InvitedMembers*/
	InvitedMembers []*models.AccountMember
	/*Recaptcha*/
	Recaptcha *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) WithTimeout(timeout time.Duration) *AccountMembersPostAccountMembersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) WithContext(ctx context.Context) *AccountMembersPostAccountMembersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) WithHTTPClient(client *http.Client) *AccountMembersPostAccountMembersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) WithAccountID(accountID int32) *AccountMembersPostAccountMembersParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) SetAccountID(accountID int32) {
	o.AccountID = accountID
}

// WithInvitedMembers adds the invitedMembers to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) WithInvitedMembers(invitedMembers []*models.AccountMember) *AccountMembersPostAccountMembersParams {
	o.SetInvitedMembers(invitedMembers)
	return o
}

// SetInvitedMembers adds the invitedMembers to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) SetInvitedMembers(invitedMembers []*models.AccountMember) {
	o.InvitedMembers = invitedMembers
}

// WithRecaptcha adds the recaptcha to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) WithRecaptcha(recaptcha *string) *AccountMembersPostAccountMembersParams {
	o.SetRecaptcha(recaptcha)
	return o
}

// SetRecaptcha adds the recaptcha to the account members post account members params
func (o *AccountMembersPostAccountMembersParams) SetRecaptcha(recaptcha *string) {
	o.Recaptcha = recaptcha
}

// WriteToRequest writes these params to a swagger request
func (o *AccountMembersPostAccountMembersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", swag.FormatInt32(o.AccountID)); err != nil {
		return err
	}

	if o.InvitedMembers != nil {
		if err := r.SetBodyParam(o.InvitedMembers); err != nil {
			return err
		}
	}

	if o.Recaptcha != nil {

		// query param recaptcha
		var qrRecaptcha string
		if o.Recaptcha != nil {
			qrRecaptcha = *o.Recaptcha
		}
		qRecaptcha := qrRecaptcha
		if qRecaptcha != "" {
			if err := r.SetQueryParam("recaptcha", qRecaptcha); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
