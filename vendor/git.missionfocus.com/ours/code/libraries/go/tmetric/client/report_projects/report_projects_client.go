// Code generated by go-swagger; DO NOT EDIT.

package report_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new report projects API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for report projects API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	ReportProjectsGetSummaryProjectsCSV(params *ReportProjectsGetSummaryProjectsCSVParams, authInfo runtime.ClientAuthInfoWriter) (*ReportProjectsGetSummaryProjectsCSVOK, error)

	ReportProjectsGetSummaryProjectsPDF(params *ReportProjectsGetSummaryProjectsPDFParams, authInfo runtime.ClientAuthInfoWriter) (*ReportProjectsGetSummaryProjectsPDFOK, error)

	ReportProjectsGetSummaryProjectsReport(params *ReportProjectsGetSummaryProjectsReportParams, authInfo runtime.ClientAuthInfoWriter) (*ReportProjectsGetSummaryProjectsReportOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  ReportProjectsGetSummaryProjectsCSV gets the summary projects report as c s v
*/
func (a *Client) ReportProjectsGetSummaryProjectsCSV(params *ReportProjectsGetSummaryProjectsCSVParams, authInfo runtime.ClientAuthInfoWriter) (*ReportProjectsGetSummaryProjectsCSVOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReportProjectsGetSummaryProjectsCSVParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ReportProjects_GetSummaryProjectsCSV",
		Method:             "GET",
		PathPattern:        "/api/reports/summary/projects/csv",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReportProjectsGetSummaryProjectsCSVReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReportProjectsGetSummaryProjectsCSVOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReportProjects_GetSummaryProjectsCSV: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReportProjectsGetSummaryProjectsPDF gets the summary projects report as p d f
*/
func (a *Client) ReportProjectsGetSummaryProjectsPDF(params *ReportProjectsGetSummaryProjectsPDFParams, authInfo runtime.ClientAuthInfoWriter) (*ReportProjectsGetSummaryProjectsPDFOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReportProjectsGetSummaryProjectsPDFParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ReportProjects_GetSummaryProjectsPDF",
		Method:             "GET",
		PathPattern:        "/api/reports/summary/projects/pdf",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReportProjectsGetSummaryProjectsPDFReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReportProjectsGetSummaryProjectsPDFOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReportProjects_GetSummaryProjectsPDF: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReportProjectsGetSummaryProjectsReport report projects get summary projects report API
*/
func (a *Client) ReportProjectsGetSummaryProjectsReport(params *ReportProjectsGetSummaryProjectsReportParams, authInfo runtime.ClientAuthInfoWriter) (*ReportProjectsGetSummaryProjectsReportOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReportProjectsGetSummaryProjectsReportParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ReportProjects_GetSummaryProjectsReport",
		Method:             "GET",
		PathPattern:        "/api/reports/summary/projects",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReportProjectsGetSummaryProjectsReportReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReportProjectsGetSummaryProjectsReportOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReportProjects_GetSummaryProjectsReport: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
