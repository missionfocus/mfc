// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WebToolIssueTimer web tool issue timer
//
// swagger:model WebToolIssueTimer
type WebToolIssueTimer struct {

	// description
	Description string `json:"description,omitempty"`

	// is billable
	IsBillable bool `json:"isBillable,omitempty"`

	// is started
	IsStarted bool `json:"isStarted,omitempty"`

	// issue Id
	IssueID string `json:"issueId,omitempty"`

	// issue name
	IssueName string `json:"issueName,omitempty"`

	// issue Url
	IssueURL string `json:"issueUrl,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// service type
	ServiceType string `json:"serviceType,omitempty"`

	// service Url
	ServiceURL string `json:"serviceUrl,omitempty"`

	// show issue Id
	ShowIssueID bool `json:"showIssueId,omitempty"`

	// tag names
	TagNames []string `json:"tagNames"`
}

// Validate validates this web tool issue timer
func (m *WebToolIssueTimer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WebToolIssueTimer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebToolIssueTimer) UnmarshalBinary(b []byte) error {
	var res WebToolIssueTimer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
