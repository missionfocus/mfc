// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TimeOffPolicyMember time off policy member
//
// swagger:model TimeOffPolicyMember
type TimeOffPolicyMember struct {

	// account Id
	AccountID int32 `json:"accountId,omitempty"`

	// initial date
	// Format: date-time
	InitialDate strfmt.DateTime `json:"initialDate,omitempty"`

	// time off policy Id
	TimeOffPolicyID int32 `json:"timeOffPolicyId,omitempty"`

	// time off policy member Id
	TimeOffPolicyMemberID int32 `json:"timeOffPolicyMemberId,omitempty"`

	// user profile
	// Read Only: true
	UserProfile *UserProfileLite `json:"userProfile,omitempty"`

	// user profile Id
	UserProfileID int32 `json:"userProfileId,omitempty"`
}

// Validate validates this time off policy member
func (m *TimeOffPolicyMember) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInitialDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserProfile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TimeOffPolicyMember) validateInitialDate(formats strfmt.Registry) error {

	if swag.IsZero(m.InitialDate) { // not required
		return nil
	}

	if err := validate.FormatOf("initialDate", "body", "date-time", m.InitialDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TimeOffPolicyMember) validateUserProfile(formats strfmt.Registry) error {

	if swag.IsZero(m.UserProfile) { // not required
		return nil
	}

	if m.UserProfile != nil {
		if err := m.UserProfile.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("userProfile")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TimeOffPolicyMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimeOffPolicyMember) UnmarshalBinary(b []byte) error {
	var res TimeOffPolicyMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
