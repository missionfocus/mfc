// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TimeOffBalance time off balance
//
// swagger:model TimeOffBalance
type TimeOffBalance struct {

	// account Id
	AccountID int32 `json:"accountId,omitempty"`

	// balance
	Balance float64 `json:"balance,omitempty"`

	// scheduled
	Scheduled float64 `json:"scheduled,omitempty"`

	// time off policy Id
	TimeOffPolicyID int32 `json:"timeOffPolicyId,omitempty"`

	// time off policy name
	TimeOffPolicyName string `json:"timeOffPolicyName,omitempty"`

	// used
	Used float64 `json:"used,omitempty"`

	// user profile
	UserProfile *UserProfileLite `json:"userProfile,omitempty"`

	// user profile Id
	UserProfileID int32 `json:"userProfileId,omitempty"`
}

// Validate validates this time off balance
func (m *TimeOffBalance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUserProfile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TimeOffBalance) validateUserProfile(formats strfmt.Registry) error {

	if swag.IsZero(m.UserProfile) { // not required
		return nil
	}

	if m.UserProfile != nil {
		if err := m.UserProfile.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("userProfile")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TimeOffBalance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimeOffBalance) UnmarshalBinary(b []byte) error {
	var res TimeOffBalance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
