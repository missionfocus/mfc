image: golang:1.11

variables:
  PROJECT_ROOT: /go/src/git.missionfocus.com/open-source/mf-vault
  RPM_PROJECT: $CI_PROJECT_NAME
  RPM_DIR: $CI_PROJECT_DIR/build/package/rpm
  BINARIES_DIR: $CI_PROJECT_DIR/out/binaries
  PACKAGES_DIR: $CI_PROJECT_DIR/out/packages

before_script:
  - mkdir -p $PROJECT_ROOT
  - cp -r $CI_PROJECT_DIR/. $PROJECT_ROOT
  - cd $PROJECT_ROOT

stages:
  - build
  - package
  - publish
  - trigger

build:x86_64-linux:
  stage: build
  script:
    - go get
    - BINARY=$BINARIES_DIR/x86_64-linux/mf-vault GOOS=linux GOARCH=amd64 make build
  artifacts:
    expire_in: 1 week
    paths:
      - $BINARIES_DIR

build:x86_64-darwin:
  stage: build
  script:
    - go get
    - BINARY=$BINARIES_DIR/x86_64-darwin/mf-vault GOOS=darwin GOARCH=amd64 make build
  artifacts:
    expire_in: 1 week
    paths:
      - $BINARIES_DIR

build:x86_64-windows:
  stage: build
  script:
    - BINARY=$BINARIES_DIR/x86_64-windows/mf-vault.exe GOOS=windows GOARCH=amd64 make build
  artifacts:
    expire_in: 1 week
    paths:
      - $BINARIES_DIR

package:rpm:
  stage: package
  image: hub.missionfocus.com/devops/ci-images/centos/general:master
  dependencies:
    - build:x86_64-linux
  before_script:
    - cd $RPM_DIR && ansible-playbook -c local -i 'localhost,' site.yml
  script:
    - cd $RPM_PROJECT
    - mkdir -p root/usr/bin
    - cp $BINARIES_DIR/x86_64-linux/mf-vault root/usr/bin
    - chmod -R a-rw,a+r,u+w,a+X .

    - togo build package
    - RPM_NAME=$(basename `ls -1 rpms/$RPM_PROJECT-*`)

    - mkdir -p $PACKAGES_DIR/rpm
    - mv rpms/$RPM_NAME $PACKAGES_DIR/rpm
    - cd $PACKAGES_DIR/rpm
    - openssl sha1 $RPM_NAME > $RPM_NAME.checksum
  artifacts:
    name: $RPM_PROJECT-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
    expire_in: 1 week
    paths:
      - $PACKAGES_DIR

publish:s3:
  stage: publish
  only:
    - tags
  image: hub.missionfocus.com/devops/ci-images/alpine/general:master
  dependencies:
    - package:rpm
  variables:
    S3_PATH: s3://mf-stevedore/rpms
  before_script:
    - . setup_aws_auth.sh
    - cd $PACKAGES_DIR/rpm
  script:
    - aws s3 rm $S3_PATH --recursive --exclude "*" --include "$RPM_PROJECT-*"
    - aws s3 sync . $S3_PATH --exclude="*" --include "$RPM_PROJECT-*"

publish:minios:
  stage: publish
  only:
    - master
  image: hub.missionfocus.com/devops/ci-images/centos/general:master
  dependencies:
    - package:rpm
  variables:
    S3_PATH: s3://mf-stevedore/rpms/internal
  before_script:
    - . setup_minio_auth.sh
    - . setup_gpg_auth.sh
    - cd $PACKAGES_DIR/rpm
    - GPG_PASS=$GPG_PASS find ./ -name "*.rpm" -exec sh -c 'expect -c "spawn /usr/bin/rpm --addsign {}; expect -re {Enter pass phrase:}; send \"$GPG_PASS\r\"; expect eof"' \;
  script:
    - minio_aws s3 sync . $S3_PATH --exclude="*" --include "$RPM_PROJECT-*"

publish:sftp:
  stage: publish
  only:
    - tags
  image: hub.missionfocus.com/devops/ci-images/alpine/general:master
  dependencies:
    - package:rpm
    - build:x86_64-linux
    - build:x86_64-darwin
  variables:
    SFTP_BINARIES_PATH: "/web/pipeline-resources/binaries"
  before_script:
    - . setup_sftp_auth.sh
  script:
    # output binary
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "mkdir -p $SFTP_BINARIES_PATH/x86_64-linux $SFTP_BINARIES_PATH/x86_64-darwin; bye" || true
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "mput -O $SFTP_BINARIES_PATH/x86_64-linux/ $BINARIES_DIR/x86_64-linux/mf-vault; bye"
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "mput -O $SFTP_BINARIES_PATH/x86_64-darwin/ $BINARIES_DIR/x86_64-darwin/mf-vault; bye"
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "ls -l $SFTP_BINARIES_PATH; bye"
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "ls -l $SFTP_BINARIES_PATH/x86_64-linux; bye"
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "ls -l $SFTP_BINARIES_PATH/x86_64-darwin; bye"
    # output rpm
    - cd $PACKAGES_DIR/rpm && RPM_NAME=$(basename `ls -1 $RPM_PROJECT-*`)
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "cd /mf-stevedore; mkdir rpms || ls ; ls ; bye"
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "cd /mf-stevedore/rpms/; mrm $RPM_PROJECT-* || ls; ls; bye"
    - lftp sftp://release:$JACKIE_PASSWORD@jackie.missionfocus.com -e "cd /mf-stevedore/rpms/; mput $RPM_PROJECT-* ; ls; bye"

publish:gitlab-release:
  stage: publish
  only:
    - tags
  image: hub.missionfocus.com/devops/ci-images/alpine/general:master
  dependencies:
    - build:x86_64-linux
    - build:x86_64-darwin
    - build:x86_64-windows
  before_script:
    - . setup_mario_pat.sh
  script:
    - make gitlab-release | jq .
  artifacts:
    name: mf-vault-$CI_COMMIT_TAG-artifacts
    expire_in: 1 year
    paths:
      - $BINARIES_DIR

trigger:ci-images:
  stage: trigger
  only:
    - tags
  image: centos:7
  before_script:
    - echo "Triggering downstream ci-images repo"
  script:
    - curl -X POST -F token=$CI_IMAGES_TRIGGER -F ref=master https://git.missionfocus.com/api/v4/projects/396/trigger/pipeline
    - curl -X POST -F token=$CLOUDBASE_TRIGGER -F ref=master https://git.missionfocus.com/api/v4/projects/173/trigger/pipeline
  after_script:
    - echo "Trigger finished from $CI_COMMIT_REF_SLUG branch"
